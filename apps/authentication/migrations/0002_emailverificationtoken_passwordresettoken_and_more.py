# Generated by Django 5.0.14 on 2025-08-05 23:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'email_verification_tokens',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'password_reset_tokens',
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('password_change', 'Password Change'), ('password_reset', 'Password Reset'), ('email_verification', 'Email Verification'), ('profile_update', 'Profile Update'), ('avatar_upload', 'Avatar Upload'), ('account_activation', 'Account Activation'), ('account_deactivation', 'Account Deactivation')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'user_activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('shipping', 'Shipping Address'), ('billing', 'Billing Address'), ('both', 'Shipping & Billing')], default='shipping', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('street_address', models.CharField(max_length=255)),
                ('apartment_number', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('state_province', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('recipient_name', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_addresses',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, help_text='User biography', max_length=500)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], help_text='User gender', max_length=1)),
                ('website', models.URLField(blank=True, help_text="User's website URL")),
                ('location', models.CharField(blank=True, help_text="User's location", max_length=100)),
                ('timezone', models.CharField(default='UTC', help_text="User's preferred timezone", max_length=50)),
                ('language', models.CharField(default='en', help_text="User's preferred language", max_length=10)),
                ('notification_preference', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notifications'), ('none', 'No Notifications')], default='email', help_text='Preferred notification method', max_length=10)),
                ('is_profile_public', models.BooleanField(default=True, help_text='Whether profile is publicly visible')),
                ('show_email', models.BooleanField(default=False, help_text='Whether to show email publicly')),
                ('show_phone', models.BooleanField(default=False, help_text='Whether to show phone publicly')),
                ('marketing_emails', models.BooleanField(default=True, help_text='Receive marketing emails')),
                ('product_updates', models.BooleanField(default=True, help_text='Receive product update notifications')),
                ('newsletter', models.BooleanField(default=False, help_text='Subscribe to newsletter')),
                ('login_count', models.PositiveIntegerField(default=0, help_text='Total number of logins')),
                ('last_activity', models.DateTimeField(blank=True, help_text='Last activity timestamp', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='account_locked_until',
            field=models.DateTimeField(blank=True, help_text='Account locked until this time', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='email_verification_sent_at',
            field=models.DateTimeField(blank=True, help_text='When email verification was last sent', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0, help_text='Number of consecutive failed login attempts'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_email_verified',
            field=models.BooleanField(default=False, help_text='Whether user email is verified'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_password_change',
            field=models.DateTimeField(blank=True, help_text='When password was last changed', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('customer', 'Customer'), ('staff', 'Staff'), ('admin', 'Admin'), ('super_admin', 'Super Admin')], default='customer', help_text='User role', max_length=20),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_0ace22_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_verified'], name='users_is_veri_63cd6e_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_email_verified'], name='users_is_emai_476443_idx'),
        ),
        migrations.AddField(
            model_name='emailverificationtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_verification_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useraddress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['token'], name='email_verif_token_df7c5e_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['user', 'is_used'], name='email_verif_user_id_35194a_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['expires_at'], name='email_verif_expires_770728_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['token'], name='password_re_token_060a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['user', 'is_used'], name='password_re_user_id_cd37a3_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['expires_at'], name='password_re_expires_8e96b7_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'timestamp'], name='user_activi_user_id_d06d90_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['action', 'timestamp'], name='user_activi_action_1fa958_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['timestamp'], name='user_activi_timesta_12eff7_idx'),
        ),
        migrations.AddIndex(
            model_name='useraddress',
            index=models.Index(fields=['user', 'is_default'], name='user_addres_user_id_35ed52_idx'),
        ),
        migrations.AddIndex(
            model_name='useraddress',
            index=models.Index(fields=['user', 'address_type'], name='user_addres_user_id_8ff364_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='useraddress',
            unique_together={('user', 'address_type', 'is_default')},
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user'], name='user_profil_user_id_fbe33d_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['is_profile_public'], name='user_profil_is_prof_3efebc_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['last_activity'], name='user_profil_last_ac_ae158c_idx'),
        ),
    ]
