# Generated by Django 5.0.14 on 2025-08-09 00:21

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0003_auto_20250808_2206"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Provider name", max_length=100, unique=True
                    ),
                ),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("razorpay", "Razorpay"),
                            ("flutterwave", "Flutterwave"),
                            ("paystack", "Paystack"),
                            ("chapa", "Chapa"),
                        ],
                        help_text="Type of payment provider",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether provider is active"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(help_text="API key for provider", max_length=200),
                ),
                (
                    "secret_key",
                    models.CharField(
                        help_text="Secret key for provider", max_length=200
                    ),
                ),
                (
                    "webhook_secret",
                    models.CharField(
                        blank=True,
                        help_text="Webhook secret for provider",
                        max_length=200,
                    ),
                ),
                (
                    "test_mode",
                    models.BooleanField(
                        default=True, help_text="Whether to use test mode"
                    ),
                ),
                (
                    "supported_currencies",
                    models.JSONField(
                        default=list, help_text="List of supported currencies"
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Additional provider configuration"
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Provider",
                "verbose_name_plural": "Payment Providers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique cart ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True,
                        help_text="Session key for guest carts",
                        max_length=40,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("abandoned", "Abandoned"),
                            ("completed", "Completed"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        help_text="Current cart status",
                        max_length=20,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Cart currency (ISO 4217)",
                        max_length=3,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Subtotal amount (before tax and shipping)",
                        max_digits=10,
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Tax amount",
                        max_digits=10,
                    ),
                ),
                (
                    "shipping_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Shipping amount",
                        max_digits=10,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Discount amount",
                        max_digits=10,
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total amount",
                        max_digits=10,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Customer notes for the cart"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional cart metadata"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When the cart expires", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who owns the cart (null for guest carts)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cart",
                "verbose_name_plural": "Carts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Quantity of items",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Unit price at time of adding to cart",
                        max_digits=10,
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total price for this line item",
                        max_digits=10,
                    ),
                ),
                (
                    "custom_attributes",
                    models.JSONField(
                        default=dict, help_text="Custom attributes for the item"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Customer notes for this item"
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        help_text="Cart containing this item",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="payments.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="Product in cart",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_items",
                        to="products.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        help_text="Product variant (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_items",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cart Item",
                "verbose_name_plural": "Cart Items",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "method_type",
                    models.CharField(
                        choices=[
                            ("card", "Credit/Debit Card"),
                            ("bank_transfer", "Bank Transfer"),
                            ("digital_wallet", "Digital Wallet"),
                            ("crypto", "Cryptocurrency"),
                            ("mobile_money", "Mobile Money"),
                        ],
                        help_text="Type of payment method",
                        max_length=20,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for payment method", max_length=100
                    ),
                ),
                (
                    "provider_method_id",
                    models.CharField(
                        help_text="Payment method ID from provider", max_length=200
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the default payment method",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether payment method is active"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional payment method metadata"
                    ),
                ),
                (
                    "last_four",
                    models.CharField(
                        blank=True,
                        help_text="Last four digits of card (for display)",
                        max_length=4,
                    ),
                ),
                (
                    "card_brand",
                    models.CharField(
                        blank=True,
                        help_text="Card brand (Visa, Mastercard, etc.)",
                        max_length=20,
                    ),
                ),
                (
                    "expires_at",
                    models.DateField(
                        blank=True, help_text="Card expiration date", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this payment method",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        help_text="Payment provider for this method",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to="payments.paymentprovider",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "ordering": ["-is_default", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique transaction ID",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("payment", "Payment"),
                            ("refund", "Refund"),
                            ("partial_refund", "Partial Refund"),
                            ("chargeback", "Chargeback"),
                        ],
                        default="payment",
                        help_text="Type of transaction",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                            ("partially_refunded", "Partially Refunded"),
                        ],
                        default="pending",
                        help_text="Current transaction status",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Transaction amount",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD",
                        help_text="Currency code (ISO 4217)",
                        max_length=3,
                    ),
                ),
                (
                    "provider_transaction_id",
                    models.CharField(
                        help_text="Transaction ID from payment provider",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "provider_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Fee charged by payment provider",
                        max_digits=10,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Transaction description"),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Internal reference number",
                        max_length=100,
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When transaction was processed",
                        null=True,
                    ),
                ),
                (
                    "failed_at",
                    models.DateTimeField(
                        blank=True, help_text="When transaction failed", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional transaction metadata"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if transaction failed"
                    ),
                ),
                (
                    "webhook_data",
                    models.JSONField(
                        default=dict, help_text="Raw webhook data from provider"
                    ),
                ),
                (
                    "parent_transaction",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent transaction (for refunds)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_transactions",
                        to="payments.transaction",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        blank=True,
                        help_text="Payment method used for transaction",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="payments.paymentmethod",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        help_text="Payment provider used",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="payments.paymentprovider",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who made the transaction",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["user", "status"], name="payments_ca_user_id_8d60ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["session_key", "status"], name="payments_ca_session_05e32a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cart",
            index=models.Index(
                fields=["expires_at"], name="payments_ca_expires_f6e1af_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="cartitem",
            constraint=models.UniqueConstraint(
                fields=("cart", "product", "variant"),
                name="unique_cart_product_variant",
            ),
        ),
        migrations.AddConstraint(
            model_name="cartitem",
            constraint=models.UniqueConstraint(
                condition=models.Q(("variant__isnull", True)),
                fields=("cart", "product"),
                name="unique_cart_product_no_variant",
            ),
        ),
        migrations.AddConstraint(
            model_name="paymentmethod",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("user",),
                name="unique_default_payment_method_per_user",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["user", "-created_at"], name="payments_tr_user_id_d7ba42_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "-created_at"], name="payments_tr_status_7127e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["provider_transaction_id"],
                name="payments_tr_provide_6747d2_idx",
            ),
        ),
    ]
