# Generated by Django 5.0.14 on 2025-07-26 17:21

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("categories", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(help_text="Tag name", max_length=50, unique=True),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly tag identifier", unique=True
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff",
                        help_text="Tag color (hex code)",
                        max_length=7,
                    ),
                ),
            ],
            options={
                "db_table": "tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(help_text="Product name", max_length=255)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly product identifier",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed product description"),
                ),
                (
                    "short_description",
                    models.CharField(
                        blank=True, help_text="Brief product summary", max_length=500
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Stock Keeping Unit", max_length=100, unique=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Product price in USD",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price (for discounts)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost price (admin only)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "track_inventory",
                    models.BooleanField(
                        default=True, help_text="Whether to track inventory"
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Current stock quantity"
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=10, help_text="Low stock warning threshold"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether product is active"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Whether product is featured"
                    ),
                ),
                (
                    "is_digital",
                    models.BooleanField(
                        default=False, help_text="Whether product is digital"
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, help_text="SEO meta title", max_length=255
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, help_text="SEO meta description"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Product category",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="categories.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_products",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Product tags for filtering",
                        to="products.tag",
                    ),
                ),
            ],
            options={
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ImageField(help_text="Product image", upload_to="products/"),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for accessibility",
                        max_length=255,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Whether this is the primary image"
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "product_images",
                "ordering": ["sort_order", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["product", "is_primary"],
                        name="product_ima_product_c8c86a_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["slug"], name="products_slug_5e91f2_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_sku_fe2039_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_categor_9e60b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "is_featured"], name="products_is_acti_d79db5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_price_fe467e_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["created_at"], name="products_created_e1ba5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "price"], name="products_categor_bea4e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active", "stock_quantity"],
                name="products_is_acti_892892_idx",
            ),
        ),
    ]
