# Generated by Django 5.0.14 on 2025-08-08 22:01

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="VariantOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Option name (e.g., 'Color', 'Size')",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Display name for frontend", max_length=100
                    ),
                ),
                (
                    "display_type",
                    models.CharField(
                        choices=[
                            ("dropdown", "Dropdown"),
                            ("color", "Color Picker"),
                            ("button", "Button Selection"),
                            ("radio", "Radio Button"),
                        ],
                        default="dropdown",
                        help_text="How this option should be displayed",
                        max_length=20,
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is required for the product",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order of options"
                    ),
                ),
            ],
            options={
                "db_table": "variant_options",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sku",
                    models.CharField(
                        help_text="Unique SKU for this variant",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Variant-specific price (overrides product price if set)",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "compare_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original price for this variant",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost price for this variant",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Stock quantity for this variant"
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Low stock warning threshold for this variant",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this variant is available"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in grams",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "dimensions_length",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Length in cm",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "dimensions_width",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Width in cm",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "dimensions_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height in cm",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="The base product this variant belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "product_variants",
                "ordering": ["sku"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariantImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    models.ImageField(
                        help_text="Variant-specific image", upload_to="variant_images/"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Alternative text for accessibility",
                        max_length=255,
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary image for the variant",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "db_table": "product_variant_images",
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="VariantOptionValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "value",
                    models.CharField(
                        help_text="The actual value (e.g., 'Red', 'Small')",
                        max_length=100,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        help_text="Display name for frontend", max_length=100
                    ),
                ),
                (
                    "color_code",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for color options",
                        max_length=7,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional image for this value",
                        null=True,
                        upload_to="variant_values/",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order of values"
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        help_text="The option this value belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="products.variantoption",
                    ),
                ),
            ],
            options={
                "db_table": "variant_option_values",
                "ordering": ["sort_order", "value"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariantOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="option_values",
                        to="products.productvariant",
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        help_text="The option type (e.g., Color, Size)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.variantoption",
                    ),
                ),
                (
                    "value",
                    models.ForeignKey(
                        help_text="The selected value (e.g., Red, Large)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.variantoptionvalue",
                    ),
                ),
            ],
            options={
                "db_table": "product_variant_options",
            },
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(
                fields=["product", "is_active"], name="product_var_product_b96575_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(fields=["sku"], name="product_var_sku_3a95f0_idx"),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(
                fields=["stock_quantity"], name="product_var_stock_q_ecefab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productvariantimage",
            index=models.Index(
                fields=["variant", "is_primary"], name="product_var_variant_a7b858_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="variantoptionvalue",
            unique_together={("option", "value")},
        ),
        migrations.AddIndex(
            model_name="productvariantoption",
            index=models.Index(
                fields=["variant", "option"], name="product_var_variant_4c4b95_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productvariantoption",
            unique_together={("variant", "option")},
        ),
    ]
