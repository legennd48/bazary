services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: bazary_dev
      POSTGRES_USER: bazary_user
      POSTGRES_PASSWORD: bazary_dev_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bazary_user -d bazary_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web Application
  web:
    build:
      context: .
      target: development
    restart: unless-stopped
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8001:8000"  # Map to port 8001 for development deployment
    env_file:
      - .env.development
    environment:
      - DJANGO_SETTINGS_MODULE=bazary.settings.development
      - DATABASE_URL=postgres://bazary_user:bazary_dev_password@db:5432/bazary_dev
      - REDIS_URL=redis://redis:6379/1
      - DEBUG=True
      # Optional: Override Chapa keys here
      # - CHAPA_PUBLIC_KEY=CHASECK_TEST-your-key
      # - CHAPA_SECRET_KEY=CHASECK_TEST-your-secret
      # - CHAPA_ENCRYPTION_KEY=your-encryption-key
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py setup_payment_providers --provider chapa || true &&
             python manage.py runserver 0.0.0.0:8000"

  # Nginx (for production-like setup)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    name: bazary_network
